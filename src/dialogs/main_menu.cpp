#include "dialogs.hpp"
#include "macro.hpp"
#include "menu.hpp"

namespace bot {

consumer_t main_menu(Context ctx_) {
  auto user = ctx_.db.fetchUser(RequestUser{.user_id = ctx_.user_id});
  return main_menu(ctx_, std::move(user));
}

consumer_t main_menu(Context ctx_, User user) {
  ContextWithUser ctx(ctx_, user);

  MainMenu choosed;
  auto menu = Menu<MainMenu>{
      "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –æ—Ä–≥–∞–Ω–∞–π–∑–µ—Ä-–±–æ—Ç. –ü–æ–º–æ–≥—É –Ω–µ –∑–∞–±—ã—Ç—å –≤–∞–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏, –Ω–∞–ø–æ–º–Ω—é –æ —Å–æ–∑–≤–æ–Ω–∞—Ö –∏ –ø–æ–º–æ–≥—É —Å "
      "–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–Ω—è. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"};
  menu.add("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫", MainMenu::sheduller)
      .add("üìû –°–æ–∑–≤–æ–Ω—ã ", MainMenu::calls)
      .add("‚úÖ –°—Ä–æ—á–Ω—ã–µ –∑–∞–¥–∞—á–∏", MainMenu::tasks)
      .add("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", MainMenu::settings);
  $await_all(menu.show(ctx, choosed));
  switch (choosed) {
    case MainMenu::sheduller:
      $await_all(sheduler_menu(ctx));
      co_return;
    case MainMenu::tasks:
    case MainMenu::calls:
    case MainMenu::settings:
      $await_all(ctx.send_text("–ü–æ–∫–∞ —á—Ç–æ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ üòî"));
      co_return;
  }
}

}  // namespace bot
